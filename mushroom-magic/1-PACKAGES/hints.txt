#!/bin/bash
### #!/usr/bin/env bash

# Brian Francisco
# Personal use case packages
# 27 Feb 2024

#   《˘ ͜ʖ ˘》
#
#  ██╗   ██╗██╗  ████████╗██████╗  █████╗ ███╗   ███╗ █████╗ ██████╗ ██╗███╗   ██╗███████╗    ██████╗ ██╗  ██╗ ██████╗ ███████╗
#  ██║   ██║██║  ╚══██╔══╝██╔══██╗██╔══██╗████╗ ████║██╔══██╗██╔══██╗██║████╗  ██║██╔════╝    ██╔══██╗██║ ██╔╝██╔════╝ ██╔════╝
#  ██║   ██║██║     ██║   ██████╔╝███████║██╔████╔██║███████║██████╔╝██║██╔██╗ ██║█████╗      ██████╔╝█████╔╝ ██║  ███╗███████╗
#  ██║   ██║██║     ██║   ██╔══██╗██╔══██║██║╚██╔╝██║██╔══██║██╔══██╗██║██║╚██╗██║██╔══╝      ██╔═══╝ ██╔═██╗ ██║   ██║╚════██║
#  ╚██████╔╝███████╗██║   ██║  ██║██║  ██║██║ ╚═╝ ██║██║  ██║██║  ██║██║██║ ╚████║███████╗    ██║     ██║  ██╗╚██████╔╝███████║
#   ╚═════╝ ╚══════╝╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝    ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝
#
# https://patorjk.com/software/taag/#p=display&c=bash&f=ANSI%20Shadow&t=Ultramarine%20Pkgs


# Install some software:
software_packages=(
    acl aria2 attr btop cifs-utils cjson codec2 curl dbus-glib direnv dnsutils duf earlyoom espeak espeak-ng easyeffects fancontrol-{gui,gui-kcm,gui-plasmoid}
    fastfetch ffmpeg ffmpegthumbs ffmpegthumbnailer figlet flatpak fortune-mod git google-noto-emoji-color-fonts grep grub-customizer
    )
software_packages1=(
    gstreamer1.0-{libav,vaapi} gstreamer1.0-plugins-{bad-free,bad-free-extras,good,good-extras,ugly,ugly-free} gtk-murrine-engine gtk2-engines gtk{2,3}-immodule-xim
    ibus-gtk4 intel-media-driver kdegraphics-thumbnailers libavcodec-{free,freeworld} libfreeaptx libfreeaptx-tools libgcab1 librabbitmq librabbitmq-tools
    libva-intel-driver libvdpau libvdpau-va-gl libXext llvm16-libs lpcnetfreedv lsd mbedtls meld
    )
software_packages2=(
    mozilla-ublock-origin nano neofetch net-snmp openssh ostree p7zip p7zip-plugins p7zip-gui pandoc pipewire-codec-aptx plasma-discover-{flatpak,packagekit,snap}
    plocate powertop pulseeffects python3-setproctitle rclone rclone-browser ripgrep rygel sassc sxiv tar terminator tlp tlp-rdw tlpi tumbler tumbler-extra ugrep
    un{zip,rar} unrar-free variety wget wsdd xorg-x11-fonts-ISO8859-1-100dpi zip
    )

software_explanations=(
    "acl                               Access control list utilities for file permissions management."
    "aria2                             High speed download utility"
    "attr                              Tools for managing extended attributes on filesystems."
    "btop                              Modern and colorful command line resource monitor that shows usage and stats"
    "cifs-utils                        Utilities for mounting and managing CIFS/SMB file systems."
    "cjson                             Ultralightweight JSON parser in ANSI C"
    "codec2                            Next-Generation Digital Voice for Two-Way Radio"
    "curl                              A utility for getting files from remote servers (FTP, HTTP, and others)"
    "dbus-glib                         GLib bindings for D-Bus"
    "direnv                            Utility to set directory specific environment variables"
    "dns-utils                         DNS utilities for querying DNS servers."
    "duf                               Disk Usage/Free Utility"
    "earlyoom                          Early OOM Daemon"
    "espeak                            Multi-lingual software speech synthesizer"
    "espeak-ng                         eSpeak Next Geberation open source speech synthesizer"
    "easyeffects                       Audio effects for PipeWire applications"
    "fancontrol                        utility to control the fan speed (GUI, KCM and Plasmoid)"
    "fastfetch                         Like neofetch, but much faster because written in c"
    "ffmpeg                            Complete, cross-platform solution for recording, converting, and streaming audio and video."
    "ffmpegthumbnailer                 Lightweight video thumbnailer that can be used by file managers"
    "ffmpegthumbs                      KDE ffmpegthumbnailer service"
    "figlet                            Make large character ASCII banners out of ordinary text"
    "flatpak                           Application sandboxing and distribution framework."
    "font-manager                      font management application for the GNOME desktop"
    "fortune-mod                       provides fortune cookies on demand"
    "git                               Fast Version Control System"
    "google-noto-emoji-color-fonts     Google “Noto Color Emoji” colored emoji font"
    "grep                              GNU grep. egrep and fgrep"
    "grub-customizer                   GUI to configure GRUB2 and BURG"
    )

software_explanations1=(
    "gstreamer1-libav                  GStreamer plugins for the libav codec library."
    "gstreamer1-plugins-bad-free       GStreamer plugins from the 'bad' set (+ extras)."
    "gstreamer1-plugins-good           GStreamer plugins with good code and licensing (+ extras)"
    "gstreamer1-plugins-ugly           GStreamer plugins from the 'ugly' set (+ free)."
    "gstreamer1.0-vaapi                GStreamer plugins for video decoding/encoding using VA-API."
    "gtk-murrine-engine                Murrine GTK2 engine"
    "gtk2-engines                      Murrine GTK2 engine"
    "gtk2-immodule-xim                 XIM support for GTK+"
	"gtk3-immodule-xim                 XIM support for GTK+"
    "ibus-gtk4                         IBus IM module for GTK4"
    "intel-media-driver                The Intel Media Driver for VAAPI"
    "kdegraphics-thumbnailers          Graphics file format thumbnailers for KDE."
    "libavcodec-free                   FFmpeg codec library"
    "libavcodec-freeworld              Freeworld libavcodec to complement the distro counterparts"
	"libfreeaptx                       Open Source implementation of Audio Processing Technology codec (aptX)"
	"libfreeaptx-tools                 libfreeaptx encoder and decoder utilities"
	"libgcab1                          Library to create Cabinet archives"
	"librabbitmq                       Client library for AMQP"
	"librabbitmq-tools                 Example tools built using the librabbitmq package"
	'librist                           Library for Reliable Internet Stream Transport (RIST) protocol"
    "libva-intel-driver                HW video decode support for Intel integrated graphics"
    "libvdpau                          Wrapper library for the Video Decode and Presentation API"
    "libvdpau-va-gl                    VDPAU driver with OpenGL/VAAPI back-end"
    "libXext                           X.Org X11 libXext runtime library"
    "llvm16-libs                       LLVM shared libraries"
    "lpcnetfreedv                      LPCNet for FreeDV"
    "lsd                               ls command with a lot of pretty colors and some other stuff"
    "mbedtls                           Light-weight cryptographic and SSL/TLS library"
    "meld                              graphical tool to diff and merge files"
    )

software_explanations2=(
    "mozilla-ublock-origin             An efficient blocker for Firefox"
    "nano                              A small text editor"
    "neofetch                          Fast, highly customizable system info script."
    "net-snmp                          A collection of SNMP (Simple Network Management Protocol) tools and libraries"
    "openssh                           An open source implementation of SSH protocol version 2"
    "ostree                            Tool for managing bootable, immutable filesystem trees"
    "p7zip                             Very high compression ratio file archiver"
    "p7zip-plugins                     Additional plugins for p7zip"
    "p7zip-gui                         7zG - 7-Zip GUI version"
    "pandoc                            general markup converter"
    "pipewire-codec-aptx               PipeWire Bluetooth aptX codec plugin"
    "plasma-discover-flatpak           Plasma Discover flatpak support"
    "plasma-discover-packagekit        Plasma Discover PackageKit support"
    "plasma-discover-snap              Plasma Discover snap support"
    "plocate                           Fast filesystem search tool."
    "powertop                          diagnose issues with power consumption and management"
    "pulseeffects                      "
    "python3-setproctitle              Allow customization of the process title."
    "rclone                            rsync for commercial cloud storage"
    "rclone-browser                    Simple cross platform GUI for rclone"
    "ripgrep                           recursively searches your current directory for a regex"
    "rygel                             GNOME UPnP/DLNA services"
    "sassc                             Wrapper around libsass to compile CSS stylesheet"
    "sxiv                              simple X image viewer"
    "tar                               GNU file archiving program"
    "terminator                        Multiple GNOME terminals in one window."
    "tlp                               feature-rich command-line utility, saving laptop battery power"
    "tlp-rdw                           TLP Radio device wizard providing event based switching of bluetooth, NFC, Wi-Fi and WWAN"
    "tlpi                              Utilities to display namespaces and control groups"

    "tumbler                           D-Bus service for applications to request thumbnails"
    "tumbler-extra                     Additional plugins for the tumbler thumbnail rendering service."
    "ugrep                             faster grep with an interactive query GUI"
    "unrar                             Extract files from RAR archives."
    "unrar-free                        Free software version of the non-free unrar utility"
    "unzip                             A utility for unpacking zip files"
    "variety                           Wallpaper changer, downloader and manager"
    "wget                              A utility for retrieving files using the HTTP or FTP protocols"
    "wsdd                              Python Web Services Discovery Daemon, Windows Net Browsing"
    "xorg-x11-fonts-ISO8859-1-100dpi   A set of 100dpi ISO-8859-1 fonts for X"
    "zip                               A file compression and packaging utility compatible with PKZIP"
)

echo "The following packages will be installed:"
for ((i = 0; i < ${#software_packages[@]}; i++)); do
    echo "- ${software_explanations[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo apt install -y --install-recommends "${software_packages[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

echo "The following packages will be installed:"
for ((i = 0; i < ${#software_packages1[@]}; i++)); do
    echo "- ${software_explanations1[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo apt install -y --install-recommends "${software_packages1[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

echo "The following packages will be installed:"
for ((i = 0; i < ${#software_packages2[@]}; i++)); do
    echo "- ${software_explanations2[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo apt install -y --install-recommends "${software_packages2[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

dnf copr enable jerrycasiano/FontManager
dnf install font-manager

# Install some software:
software_packages5=(
    blender boomaga digfikam flameshot gimp gimp-help gimp-data-extras inkscape krita neochat rhythmbox scribus scribus-doc
    scribus-template shotwell simplescreenrecorder syncthing transmission transmission-{remote-gtk,gtk,qt} uget vlc
    )

software_explanations3=(
    "blender                           Very fast and versatile 3D modeller/renderer"
    "boomaga                           virtual printer for viewing a document before printing"
    "digikam                           A digital camera accessing & photo management application"
    "flameshot                         Powerful yet simple to use screenshot software."
    "gimp                              GNU Image Manipulation Program"
    "gimp-help                         Documentation for GIMP (English)"
    "gimp-data-extras                  Extra files for GIMP"
    "inkscape                          vector-based drawing program"
    "krita                             pixel-based image manipulation program"
    "neochat                           Matrix client for desktop and mobile made by KDE"
    "rhythmbox                         Music player and organizer for GNOME."
    "scribus                           Open Source Desktop Page Layout"
    "scribus-doc                       Documentation for Scribus"
    "scribus-template                  additional scribus templates"
    "shotwell                          Digital Photo Organizer"
    "simplescreenrecorder              Feature-rich screen recorder for X11 and OpenGL"
    "syncthing                         Continuous File Synchronization"
    "transmission                      Lightweight BitTorrent Client"
    "transmission-{remote-gtk,gtk,qt}  Lightweight BitTorrent Client (GTK+ & QT Interface)"
    "uget                              easy-to-use download manager written in GTK+"
    "vlc                               Multimedia player and streaming server."
)

echo "The following packages will be installed:"
for ((i = 0; i < ${#software_packages5[@]}; i++)); do
    echo "- ${software_explanations5[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo apt install -y --install-recommends "${software_packages5[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

#Install gum : A tool for glamorous shell scripts. https://github.com/charmbracelet/gum
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
sudo apt update && sudo apt install gum

sudo apt install earlyoom
sudo systemctl enable --now earlyoom

# Support for additional file systems:
filesystem_packages=(
    btrfs-progs exfatprogs f2fs-tools hfsutils hfsplus-tools jfsutils lvm2 nilfs-utils
    ntfs-3g udftools xfsprogs disktype
)

filesystem_explanations=(
    "btrfs-progs              Tools for managing Btrfs file systems."
    "exfatprogs               Utilities for exFAT file system."
    "f2fs-tools               Utilities for Flash-Friendly File System (F2FS)."
    "hfsutils                 Tools for reading and writing Macintosh HFS volumes"
    "hfsplus-tools            Tools to create/check Apple HFS+ filesystems"
    "jfsutils                 Utilities for JFS (Journaled File System)."
    "lvm2                     Logical Volume Manager 2 utilities."
    "nilfs-utils              Utilities for managing NILFS v2 filesystems"
    "ntfs-3g                  Linux NTFS userspace driver"
    "udftools                 Tools for UDF (Universal Disk Format) file system."
    "xfsprogs                 Tools for managing XFS file systems."
    "disktype                 Detects the content format of a disk or disk image."
)

echo "The following packages will be installed:"
for ((i = 0; i < ${#filesystem_packages[@]}; i++)); do
    echo "- ${filesystem_explanations[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo apt install -y --install-recommends "${filesystem_packages[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

    # Install firmware for AMD GPU
    sudo apt update
    sudo apt install firmware-amd-graphics -y
    echo "AMD GPU firmware installed successfully."


#################################################################################


# Installing fonts
sudo dnf install curl cabextract xorg-x11-font-utils fontconfig -y
sudo rpm -i https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm

sudo apt install fonts-font-awesome
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/FiraCode.zip
sudo unzip FiraCode.zip -d /usr/share/fonts
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
sudo unzip Meslo.zip -d /usr/share/fonts
wget https://github.com/tolgaerok/fonts-tolga/raw/main/WPS-FONTS.zip
sudo unzip WPS-FONTS.zip -d /usr/share/fonts/wps-office

# Reloading Font
sudo fc-cache -vf

# Removing zip Files
rm ./FiraCode.zip ./Meslo.zip ./WPS-FONTS.zip

####################################################

install_apps() {
	display_message "[${GREEN}✔${NC}]  Installing afew personal apps..."

	remove_libreoffice

	sudo dnf -y up
	sudo dnf -y autoremove
	sudo dnf -y clean all

	# Enable trim support
	sudo systemctl enable fstrim.timer

	# Install Apps



	# Audio
	[ -f /usr/bin/easyeffects ] && [ -f $HOME/.config/easyeffects/output/default.json ] && easyeffects -l default
	[ -f /usr/bin/pulseeffects ] && [ -f $HOME/.config/PulseEffects/output/default.json ] && pulseeffects -l default
-----------------------------------------------
	sudo dnf install -y PackageKit dconf-editor      ffmpeg-libs      gnome-font-viewer
	sudo dnf install -y  kate libdvdcss libffi-devel  mpg123  openssl-devel   pip python3 python3-pip
	sudo dnf install -y mesa-libGL mesa-libGLw mesa-libGLU mesa-libGLU-devel mesa-filesystem mesa-va-drivers mesa-libEGL mesa-libglapi mesa-libGL-devel mesa-vulkan-drivers mesa-libd3d-devel mesa-libOpenCL mesa-libOSMesa
	sudo dnf install -y    sshpass  timeshift   cowsay

	# NOT SURE ABOUT THIS sudo dnf install -y sshfs fuse-sshfs

	sudo dnf install -y rsync openssh-server openssh-clients wsdd
	sudo dnf install -y  virt-manager  xclip zstd fd-find fzf gtk3
	sudo dnf install dnf5 dnf5-plugins dnfdragora

	# Configure fortune
	# If you want to display a specific fortune file or category, you can use the -e option followed by the file or category name. For example:
	# fortune -e art ascii-art bofh-excuses computers cookie definitions disclaimer drugs education fortunes humorists kernelnewbies knghtbrd law linux literature miscellaneous news people riddles science
	# or to see a list:
	# fortune -f
-------------------------------------------
	sudo dnf install --assumeyes --best --allowerasing \
		flatpak neofetch nano htop zip un{zip,rar} tar ffmpeg ffmpegthumbnailer tumbler sassc \
		google-noto-{cjk,emoji-color}-fonts gtk-murrine-engine gtk2-engines ntfs-3g wget curl git openssh \
		libva-intel-driver intel-media-driver mozilla-ublock-origin easyeffects pulseeffects

	sudo dnf install -y 'google-roboto*' 'mozilla-fira*' fira-code-fonts

	# Execute rygel to start DLNA sharing
	/usr/bin/rygel-preferences

	# Install profile-sync: it to manage browser profile(s) in tmpfs and to periodically sync back to the physical disc (HDD/SSD)
	sudo dnf install profile-sync-daemon
	/usr/bin/profile-sync-daemon preview
	# sudo dnf remove profile-sync-daemon
	# psd profile located in $HOME/.config/psd/psd.conf

	## Networking packages
	sudo dnf -y install iptables iptables-services nftables

	## System utilities
	sudo dnf -y install bash-completion busybox crontabs ca-certificates curl dnf-plugins-core dnf-utils gnupg2 nano screen ufw unzip vim wget zip

	## Programming and development tools
	sudo dnf -y install autoconf automake bash-completion git libtool make pkg-config python3 python3-pip

	## Additional libraries and dependencies
	sudo dnf -y install bc binutils haveged jq libsodium libsodium-devel PackageKit qrencode socat

	## Miscellaneous
	sudo dnf -y install dialog htop net-tools

	sudo dnf swap -y libavcodec-free libavcodec-freeworld --allowerasing
	sudo dnf swap -y ffmpeg-free ffmpeg --allowerasing

	display_message "[${GREEN}✔${NC}]  Installing GUM"

	echo '[charm]
name=Charm
baseurl=https://repo.charm.sh/yum/
enabled=1
gpgcheck=1
gpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo
	sudo yum install gum -y

	gum spin --spinner dot --title "GUM installed" -- sleep 2

	## Make a backup of the original sysctl.conf file
	display_message "[${GREEN}✔${NC}]  Tweaking network settings"

	cp $SYS_PATH /etc/sysctl.conf.bak

	echo
	yellow_msg 'Default sysctl.conf file Saved. Directory: /etc/sysctl.conf.bak'
	echo
	gum spin --spinner dot --title "Stand-by..." -- sleep 1
##############################################################
	# Install some fonts
	display_message "[${GREEN}✔${NC}]  Installing some fonts"
	sudo dnf install -y fontawesome-fonts powerline-fonts
	sudo mkdir -p ~/.local/share/fonts
	cd ~/.local/share/fonts && curl -fLO https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/DroidSansMono/DroidSansMNerdFont-Regular.otf
	wget https://github.com/tolgaerok/fonts-tolga/raw/main/WPS-FONTS.zip
	unzip WPS-FONTS.zip -d /usr/share/fonts

	zip_file="Apple-Fonts-San-Francisco-New-York-master.zip"

	# Check if the ZIP file exists
	if [ -f "$zip_file" ]; then
		# Remove existing ZIP file
		sudo rm -f "$zip_file"
		echo "Existing ZIP file removed."
	fi

	# Download the ZIP file
	curl -LJO https://github.com/tolgaerok/Apple-Fonts-San-Francisco-New-York/archive/refs/heads/master.zip

	# Check if the download was successful
	if [ -f "$zip_file" ]; then
		# Unzip the contents to the system-wide fonts directory
		sudo unzip -o "$zip_file" -d /usr/share/fonts/

		# Update font cache
		sudo fc-cache -f -v

		# Remove the ZIP file
		rm "$zip_file"

		display_message "[${GREEN}✔${NC}] Apple fonts installed successfully."
		echo ""
		gum spin --spinner dot --title "Re-thinking... 1 sec" -- sleep 2
	else
		display_message "[${RED}✘${NC}] Download failed. Please check the URL and try again."
		gum spin --spinner dot --title "Stand-by..." -- sleep 2
	fi

	# Reloading Font
	sudo fc-cache -vf

	# Removing zip Files
	rm ./WPS-FONTS.zip
	sudo fc-cache -f -v

	sudo dnf install fontconfig-font-replacements -y --skip-broken && sudo dnf install fontconfig-enhanced-defaults -y --skip-broken

	sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/tolgaerok/tolga-scripts/main/Fedora39/San-Francisco-family/San-Francisco-family.sh)"
	###################################################
# Function to remove residual configuration files
function remove_residual_config_files() {
    packages=$(dpkg -l | awk '/^rc/ { print $2 }')
    if [ -n "$packages" ]; then
        sudo dpkg -P $packages
        echo "Residual configuration files removed."
    else
        echo "No residual configuration files found."
    fi
}

# Function to clear systemd journal logs
function clear_journal_logs() {
    sudo journalctl --vacuum-time=7d
    echo "Systemd journal logs cleared."
}

# Lets clean up
echo -e "\n\n----------------------------------------------"
echo -e "|     Let's clean up                         |"
echo -e "----------------------------------------------\n\n"
sudo update-grub
sudo apt-get autoremove -y
sudo apt-get autoclean -y
clear_journal_logs
remove_residual_config_files

echo -e "\n\n----------------------------------------------"
echo -e "|     Let's clean up your SSD                 |"
echo -e "----------------------------------------------\n\n"
sudo fstrim -av

echo -e "\n\n----------------------------------------------"
echo -e "|                                            |"
echo -e "|        Setup Complete! Enjoy debian!       |"
echo -e "|       Please run placeholder.sh            |"
echo -e "|    to back up your APT packages and more   |"
echo -e "|                                            |"
echo -e "----------------------------------------------\n\n"

exit 0
